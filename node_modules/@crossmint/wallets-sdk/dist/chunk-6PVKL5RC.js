import{x as r}from"./chunk-PSXRNSOE.js";import{f as e}from"./chunk-BW7YYVZE.js";import{PublicKey as m,VersionedTransaction as h}from"@solana/web3.js";import i from"bs58";var o=class{constructor(n){this.config=n;this.type="external-wallet";if(n.address==null)throw new Error("Please provide an address for the External Wallet Signer");this._address=n.address,this.onSignTransaction=n.onSignTransaction}address(){return this._address}locator(){return this.config.locator}signMessage(){return e(this,null,function*(){return yield Promise.reject(new Error("signMessage method not implemented for solana external wallet signer"))})}signTransaction(n){return e(this,null,function*(){if(this.onSignTransaction==null)return yield Promise.reject(new Error("onSignTransaction method is required to sign transactions with a Solana external wallet"));let l=i.decode(n),c=h.deserialize(l),t=yield this.onSignTransaction(c),d=new m(this._address),a=t.message.staticAccountKeys.findIndex(u=>u.equals(d));if(a===-1)throw new r("Wallet public key not found in transaction signers");let s=t.signatures[a];if(s==null)throw new r("No valid signature found in the transaction");let g=new Uint8Array(Object.values(s));return{signature:i.encode(g)}})}};export{o as a};
