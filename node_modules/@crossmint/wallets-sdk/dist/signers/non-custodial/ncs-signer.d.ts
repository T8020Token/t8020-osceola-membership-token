import { Signer, EmailInternalSignerConfig, PhoneInternalSignerConfig, BaseSignResult } from '../types.js';
import 'ox';
import '@crossmint/client-sdk-window';
import '@crossmint/client-signers';
import '@crossmint/common-sdk-base';
import '../../chains/chains.js';
import 'viem';

declare abstract class NonCustodialSigner implements Signer {
    protected config: EmailInternalSignerConfig | PhoneInternalSignerConfig;
    readonly type: "email" | "phone";
    private _needsAuth;
    private _authPromise;
    private _initializationPromise;
    constructor(config: EmailInternalSignerConfig | PhoneInternalSignerConfig);
    locator(): string;
    address(): string;
    abstract signMessage(message: string): Promise<BaseSignResult>;
    private initialize;
    abstract signTransaction(transaction: string): Promise<{
        signature: string;
    }>;
    private getTEEConnection;
    private initializeTEEConnection;
    protected handleAuthRequired(): Promise<void>;
    protected getJwtOrThrow(): string;
    private createAuthPromise;
    private sendMessageWithOtp;
    private getAuthId;
    private verifyOtp;
}
declare const DEFAULT_EVENT_OPTIONS: {
    timeoutMs: number;
    intervalMs: number;
};

export { DEFAULT_EVENT_OPTIONS, NonCustodialSigner };
