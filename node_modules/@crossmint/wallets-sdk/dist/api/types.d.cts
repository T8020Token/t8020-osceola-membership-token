import { Address } from 'viem';
import { CreateWalletV2025Dto, WalletV2025ResponseDto, WalletV1Alpha2ErrorDto, CreateTransactionV2025Dto, WalletsTransactionV2025ResponseDto, WalletV1Alpha2TransactionErrorDto, SubmitApprovalV2025Dto, WalletsV1ControllerSubmitApprovals4Error, WalletsV1ControllerGetTransaction4Error, CreateSignatureV2025Dto, WalletsSignatureV2025ResponseDto, WalletsV1ControllerCreateSignatureRequest4Error, WalletsV1ControllerSubmitSignatureApprovals4Error, WalletsV1ControllerGetSignature4Error, WalletsMultipleTransactionV2025ResponseDto, WalletsV1ControllerGetTransactionsWithoutChain4Error, WalletNftsResponseDto, WalletsV1Alpha2ActivityResponseDto, WalletBalanceV20250609ResponseDto, BalanceControllerGetBalanceForLocator2Error, CreateSignerV2025InputDto, DelegatedSignerV2025Dto, WalletsV1ControllerCreateDelegatedSigner4Error, WalletsV1ControllerGetDelegatedSigner4Error, SendTokenDto, WalletsSendTokenControllerSendToken2Response } from './gen/types.gen.cjs';

type CreateWalletParams = CreateWalletV2025Dto;
type GetWalletSuccessResponse = WalletV2025ResponseDto;
type CreateWalletResponse = GetWalletSuccessResponse | WalletV1Alpha2ErrorDto;
type GetWalletResponse = GetWalletSuccessResponse | WalletV1Alpha2ErrorDto;
type AdminSignerConfig = NonNullable<Extract<CreateWalletV2025Dto, {
    config: {
        adminSigner: Record<string, unknown>;
    };
}>["config"]>["adminSigner"];
type CreateTransactionParams = CreateTransactionV2025Dto;
type CreateTransactionSuccessResponse = WalletsTransactionV2025ResponseDto;
type CreateTransactionResponse = CreateTransactionSuccessResponse | WalletV1Alpha2TransactionErrorDto;
type ApproveTransactionParams = SubmitApprovalV2025Dto;
type ApproveTransactionResponse = WalletsTransactionV2025ResponseDto | WalletsV1ControllerSubmitApprovals4Error;
type GetTransactionResponse = WalletsTransactionV2025ResponseDto | WalletsV1ControllerGetTransaction4Error;
type GetTransactionSuccessResponse = WalletsTransactionV2025ResponseDto;
type CreateSignatureParams = CreateSignatureV2025Dto;
type CreateSignatureResponse = WalletsSignatureV2025ResponseDto | WalletsV1ControllerCreateSignatureRequest4Error;
type ApproveSignatureParams = SubmitApprovalV2025Dto;
type ApproveSignatureResponse = WalletsSignatureV2025ResponseDto | WalletsV1ControllerSubmitSignatureApprovals4Error;
type GetSignatureResponse = WalletsSignatureV2025ResponseDto | WalletsV1ControllerGetSignature4Error;
type GetTransactionsResponse = WalletsMultipleTransactionV2025ResponseDto | WalletsV1ControllerGetTransactionsWithoutChain4Error;
type GetNftsResponse = WalletNftsResponseDto;
type GetBalanceResponse = WalletBalanceV20250609ResponseDto | BalanceControllerGetBalanceForLocator2Error;
type GetBalanceSuccessResponse = WalletBalanceV20250609ResponseDto;
type GetActivityResponse = WalletsV1Alpha2ActivityResponseDto | WalletV1Alpha2ErrorDto;
type Activity = WalletsV1Alpha2ActivityResponseDto;
type RegisterSignerChain = Extract<CreateSignerV2025InputDto, {
    chain: string;
}>["chain"];
type RegisterSignerPasskeyParams = Extract<CreateSignerV2025InputDto["signer"], {
    type: "passkey";
}>;
type RegisterSignerParams = {
    signer: string | RegisterSignerPasskeyParams;
    chain?: RegisterSignerChain;
};
type RegisterSignerResponse = DelegatedSignerV2025Dto | WalletsV1ControllerCreateDelegatedSigner4Error;
type GetSignerResponse = DelegatedSignerV2025Dto | WalletsV1ControllerGetDelegatedSigner4Error;
type GetDelegatedSignersResponse = Array<DelegatedSignerV2025Dto> | WalletsV1ControllerGetDelegatedSigner4Error;
type DelegatedSigner = DelegatedSignerV2025Dto;
type SendParams = SendTokenDto;
type SendResponse = WalletsSendTokenControllerSendToken2Response;
type WalletType = "smart" | "mpc";
type SolanaAddress = string;
type EvmWalletLocator = `me:evm:${WalletType}` | Address;
type SolanaWalletLocator = `me:solana:${WalletType}` | SolanaAddress;
type WalletLocator = EvmWalletLocator | SolanaWalletLocator;

export type { Activity, AdminSignerConfig, ApproveSignatureParams, ApproveSignatureResponse, ApproveTransactionParams, ApproveTransactionResponse, CreateSignatureParams, CreateSignatureResponse, CreateTransactionParams, CreateTransactionResponse, CreateTransactionSuccessResponse, CreateWalletParams, CreateWalletResponse, DelegatedSigner, GetActivityResponse, GetBalanceResponse, GetBalanceSuccessResponse, GetDelegatedSignersResponse, GetNftsResponse, GetSignatureResponse, GetSignerResponse, GetTransactionResponse, GetTransactionSuccessResponse, GetTransactionsResponse, GetWalletResponse, GetWalletSuccessResponse, RegisterSignerChain, RegisterSignerParams, RegisterSignerPasskeyParams, RegisterSignerResponse, SendParams, SendResponse, WalletLocator };
