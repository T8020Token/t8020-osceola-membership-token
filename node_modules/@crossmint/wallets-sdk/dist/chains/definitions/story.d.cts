import * as viem from 'viem';

declare const story: {
    blockExplorers?: {
        [key: string]: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
        default: {
            name: string;
            url: string;
            apiUrl?: string | undefined;
        };
    } | undefined;
    blockTime?: number | undefined;
    contracts?: viem.Prettify<{
        [key: string]: viem.ChainContract | {
            [sourceId: number]: viem.ChainContract | undefined;
        } | undefined;
    } & {
        ensRegistry?: viem.ChainContract | undefined;
        ensUniversalResolver?: viem.ChainContract | undefined;
        multicall3?: viem.ChainContract | undefined;
        universalSignatureVerifier?: viem.ChainContract | undefined;
    }> | undefined;
    ensTlds?: readonly string[] | undefined;
    id: 1514;
    name: "Story";
    nativeCurrency: {
        readonly decimals: 18;
        readonly name: "IP Token";
        readonly symbol: "IP";
    };
    experimental_preconfirmationTime?: number | undefined;
    rpcUrls: {
        readonly default: {
            readonly http: readonly ["https://mainnet.storyrpc.io"];
        };
    };
    sourceId?: number | undefined;
    testnet: false;
    custom?: Record<string, unknown> | undefined;
    fees?: viem.ChainFees<undefined> | undefined;
    formatters?: undefined;
    serializers?: viem.ChainSerializers<undefined, viem.TransactionSerializable> | undefined;
};

export { story };
