import { ApiClient } from '../api/client.cjs';
import { Chain } from '../chains/chains.cjs';
import { Wallet } from './wallet.cjs';
import { WalletArgsFor } from './types.cjs';
import '@crossmint/common-sdk-base';
import '../api/types.cjs';
import 'viem';
import '../api/gen/types.gen.cjs';
import '../signers/types.cjs';
import 'ox';
import '@crossmint/client-sdk-window';
import '@crossmint/client-signers';
import '@solana/web3.js';
import 'abitype';

declare class WalletFactory {
    private readonly apiClient;
    constructor(apiClient: ApiClient);
    getOrCreateWallet<C extends Chain>(args: WalletArgsFor<C>): Promise<Wallet<C>>;
    getWallet<C extends Chain>(walletLocator: string, args: WalletArgsFor<C>): Promise<Wallet<C>>;
    createWallet<C extends Chain>(args: WalletArgsFor<C>): Promise<Wallet<C>>;
    private createWalletInstance;
    private toInternalSignerConfig;
    private createPasskeyAdminSigner;
    private mutateSignerFromCustomAuth;
    private validateExistingWalletConfig;
    private validateDelegatedSigners;
    private getChainType;
}

export { WalletFactory };
