"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkMQP5VZCAcjs = require('./chunk-MQP5VZCA.cjs');var _chunkZSWIQU3Ucjs = require('./chunk-ZSWIQU3U.cjs');var _chunkXALFCQKDcjs = require('./chunk-XALFCQKD.cjs');var _commonsdkbase = require('@crossmint/common-sdk-base');var p=class{constructor(e){this.config=e;this._needsAuth=!0;this._authPromise=null;this._initializationPromise=null;this.initialize(),this.type=this.config.type}locator(){return this.config.locator}address(){return this.config.address}initialize(){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){if(this.config.clientTEEConnection==null){let e=_commonsdkbase.validateAPIKey.call(void 0, this.config.crossmint.apiKey);if(!e.isValid)throw new Error("Invalid API key");let i=new (0, _chunkMQP5VZCAcjs.a)({environment:e.environment});this.config.clientTEEConnection=yield i.initialize()}})}getTEEConnection(){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){if(this.config.clientTEEConnection==null){if(this._initializationPromise)return yield this._initializationPromise,this.config.clientTEEConnection;this._initializationPromise=this.initializeTEEConnection();try{yield this._initializationPromise}finally{this._initializationPromise=null}}return this.config.clientTEEConnection})}initializeTEEConnection(){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){console.warn("TEE connection is not initialized, initializing now...");let e=_commonsdkbase.validateAPIKey.call(void 0, this.config.crossmint.apiKey);if(!e.isValid)throw new Error("Invalid API key");let i=new (0, _chunkMQP5VZCAcjs.a)({environment:e.environment});if(this.config.clientTEEConnection=yield i.initialize(),this.config.clientTEEConnection==null)throw new Error("Failed to initialize TEE connection");console.log("TEE connection initialized successfully")})}handleAuthRequired(){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){var s,c;let e=yield this.getTEEConnection();if(this.config.onAuthRequired==null)throw new Error(`${this.type} signer requires the onAuthRequired callback to handle OTP verification. This callback manages the authentication flow (sending OTP and verifying user input). If using our React/React Native SDK, this is handled automatically by the provider. For other environments, implement: onAuthRequired: (needsAuth, sendEmailWithOtp, verifyOtp, reject) => { /* your UI logic */ }`);let i=yield e.sendAction({event:"request:get-status",responseEvent:"response:get-status",data:{authData:{jwt:(c=(s=this.config.crossmint.experimental_customAuth)==null?void 0:s.jwt)!=null?c:"",apiKey:this.config.crossmint.apiKey}},options:_chunkXALFCQKDcjs.b.call(void 0, _chunkXALFCQKDcjs.a.call(void 0, {},g),{maxRetries:5})});if((i==null?void 0:i.status)!=="success")throw new Error(i==null?void 0:i.error);if(i.signerStatus==="ready"){this._needsAuth=!1;return}else this._needsAuth=!0;let{promise:n,resolve:o,reject:r}=this.createAuthPromise();if(this._authPromise={promise:n,resolve:o,reject:r},this.config.onAuthRequired)try{yield this.config.onAuthRequired(this._needsAuth,()=>this.sendMessageWithOtp(),t=>this.verifyOtp(t),()=>_chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){this._needsAuth=!1,this.config.onAuthRequired!=null&&(yield this.config.onAuthRequired(this._needsAuth,()=>this.sendMessageWithOtp(),t=>this.verifyOtp(t),()=>{var t;return(t=this._authPromise)==null?void 0:t.reject(new _chunkZSWIQU3Ucjs.a)})),r(new _chunkZSWIQU3Ucjs.a)}))}catch(t){r(t)}try{yield n}catch(t){throw t}})}getJwtOrThrow(){var i;let e=(i=this.config.crossmint.experimental_customAuth)==null?void 0:i.jwt;if(e==null)throw new Error("JWT is required");return e}createAuthPromise(){let e,i;return{promise:new Promise((o,r)=>{e=o,i=r}),resolve:e,reject:i}}sendMessageWithOtp(){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){var o,r,s;let e=yield this.getTEEConnection(),i=this.getAuthId(),n=yield e.sendAction({event:"request:start-onboarding",responseEvent:"response:start-onboarding",data:{authData:{jwt:(r=(o=this.config.crossmint.experimental_customAuth)==null?void 0:o.jwt)!=null?r:"",apiKey:this.config.crossmint.apiKey},data:{authId:i}},options:_chunkXALFCQKDcjs.b.call(void 0, _chunkXALFCQKDcjs.a.call(void 0, {},g),{maxRetries:3})});if((n==null?void 0:n.status)==="success"&&n.signerStatus==="ready"){this._needsAuth=!1;return}(n==null?void 0:n.status)==="error"&&(console.error("[sendMessageWithOtp] Failed to send OTP:",n),(s=this._authPromise)==null||s.reject(new Error(n.error||"Failed to initiate OTP process.")))})}getAuthId(){return this.config.type==="email"?`email:${this.config.email}`:`phone:${this.config.phone}`}verifyOtp(e){return _chunkXALFCQKDcjs.f.call(void 0, this,null,function*(){var n,o,r,s,c;let i=yield this.getTEEConnection();try{let t=yield i.sendAction({event:"request:complete-onboarding",responseEvent:"response:complete-onboarding",data:{authData:{jwt:(o=(n=this.config.crossmint.experimental_customAuth)==null?void 0:n.jwt)!=null?o:"",apiKey:this.config.crossmint.apiKey},data:{onboardingAuthentication:{encryptedOtp:e}}},options:_chunkXALFCQKDcjs.b.call(void 0, _chunkXALFCQKDcjs.a.call(void 0, {},g),{maxRetries:3})});if((t==null?void 0:t.status)==="success"){this._needsAuth=!1,this.config.onAuthRequired!=null&&(yield this.config.onAuthRequired(this._needsAuth,()=>this.sendMessageWithOtp(),h=>this.verifyOtp(h),()=>{var h;return(h=this._authPromise)==null?void 0:h.reject(new _chunkZSWIQU3Ucjs.a)})),(r=this._authPromise)==null||r.resolve();return}console.error("[verifyOtp] Failed to validate OTP:",t),this._needsAuth=!0;let E=(t==null?void 0:t.status)==="error"?t.error:"Failed to validate encrypted OTP";(s=this._authPromise)==null||s.reject(new Error(E))}catch(t){throw console.error("[verifyOtp] Error sending OTP validation request:",t),this._needsAuth=!0,(c=this._authPromise)==null||c.reject(t),t}})}},g= exports.b ={timeoutMs:1e4,intervalMs:5e3};exports.a = p; exports.b = g;
