import{a as r}from"./chunk-DFSB3TWF.js";import{a as s,b as f,c as d}from"./chunk-PXDN3KFO.js";import*as c from"react";import{OTPInput as R,OTPInputContext as h}from"input-otp";import{createContext as I,useContext as b}from"react";import p from"@emotion/styled";import{keyframes as g}from"@emotion/react";import{jsx as i,jsxs as B}from"react/jsx-runtime";var C=I(void 0),O=p.div`
    display: flex;
    align-items: center;
    gap: 8px;
    
    &:has(:disabled) {
        opacity: 0.5;
    }
`,T=p(R)`
    &:disabled {
        cursor: not-allowed;
    }
`,v=c.forwardRef((n,o)=>{var a=n,{appearance:e}=a,t=d(a,["appearance"]);return i(C.Provider,{value:e,children:i(O,{children:i(T,s({autoFocus:!0,ref:o},t))})})});v.displayName="InputOTP";var k=p.div`
    display: flex;
    gap: 8px;
    align-items: center;
`,$=c.forwardRef((o,t)=>{var e=d(o,[]);return i(k,s({ref:t},e))});$.displayName="InputOTPGroup";var w=g`
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0; }
`,E=p.div`
    position: relative;
    display: flex;
    height: 56px;
    width: 48px;
    align-items: center;
    justify-content: center;
    border: 1px solid;
    font-size: 18px;
    transition: all 200ms ease;
    border-radius: ${e=>{var t;return((t=e.appearance)==null?void 0:t.borderRadius)||"6px"}};
    border-color: ${e=>{var t,o,n,a;return e.hasError?((o=(t=e.appearance)==null?void 0:t.colors)==null?void 0:o.danger)||r["cm-danger"]:((a=(n=e.appearance)==null?void 0:n.colors)==null?void 0:a.border)||r["cm-border"]}};
    background-color: ${e=>{var t,o,n,a;return e.hasChar?((o=(t=e.appearance)==null?void 0:t.colors)==null?void 0:o.buttonBackground)||r["cm-muted-primary"]:((a=(n=e.appearance)==null?void 0:n.colors)==null?void 0:a.inputBackground)||r["cm-background-primary"]}};
    color: ${e=>{var t,o;return((o=(t=e.appearance)==null?void 0:t.colors)==null?void 0:o.textPrimary)||r["cm-text-primary"]}};
    box-shadow: ${e=>{var t,o;return e.isActive?`0 0 0 2px ${((o=(t=e.appearance)==null?void 0:t.colors)==null?void 0:o.accent)||r["cm-accent"]}`:"none"}};
    z-index: ${e=>e.isActive?10:1};
`,S=p.div`
    pointer-events: none;
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
`,A=p.div`
    height: 18px;
    width: 1px;
    background-color: ${e=>{var t,o;return((o=(t=e.appearance)==null?void 0:t.colors)==null?void 0:o.textPrimary)||r["cm-text-primary"]}};
    animation: ${w} 1000ms infinite;
`,U=c.forwardRef((a,n)=>{var l=a,{index:e,hasError:t}=l,o=d(l,["index","hasError"]);let P=c.useContext(h),{char:m,hasFakeCaret:x,isActive:y}=P.slots[e],u=b(C);return B(E,f(s({ref:n,appearance:u,hasError:t,isActive:y,hasChar:!!m},o),{children:[m,x&&i(S,{children:i(A,{appearance:u})})]}))});U.displayName="InputOTPSlot";export{v as a,$ as b,U as c};
