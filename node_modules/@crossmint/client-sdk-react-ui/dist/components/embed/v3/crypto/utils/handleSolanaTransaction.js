import{d as a}from"../../../../../chunk-PXDN3KFO.js";import{isSolanaWallet as s}from"@dynamic-labs/solana";import{Transaction as l}from"@solana/web3.js";import c from"bs58";function g(u){return a(this,arguments,function*({primaryWallet:t,serializedTransaction:i,iframeClient:e}){let o;try{if(!s(t))throw new Error("primaryWallet is not a Solana wallet");o=yield t.getSigner()}catch(r){console.error("[CryptoWalletConnectionHandler] failed to get signer",r),e.send("crypto:send-transaction:failed",{error:"Failed to get signer"});return}let n;try{n=l.from(c.decode(i))}catch(r){console.error("[CryptoWalletConnectionHandler] failed to deserialize transaction",r),e.send("crypto:send-transaction:failed",{error:"Failed to deserialize transaction"});return}try{let{signature:r}=yield o.signAndSendTransaction(n);console.log("[CryptoWalletConnectionHandler] txId",r),e.send("crypto:send-transaction:success",{txId:r})}catch(r){console.error("[CryptoWalletConnectionHandler] failed to send transaction",r),e.send("crypto:send-transaction:failed",{error:r.message})}})}export{g as handleSolanaTransaction};
