"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkQI37PBS5cjs = require('../../../../chunk-QI37PBS5.cjs');var _chunkPZ3KXKJDcjs = require('../../../../chunk-PZ3KXKJD.cjs');var _chunkKSUMPQNDcjs = require('../../../../chunk-KSUMPQND.cjs');var _chunk2WSEHVNPcjs = require('../../../../chunk-2WSEHVNP.cjs');var _commonsdkbase = require('@crossmint/common-sdk-base');var _ethereum = require('@dynamic-labs/ethereum');var _sdkreactcore = require('@dynamic-labs/sdk-react-core');var _solana = require('@dynamic-labs/solana');var _sui = require('@dynamic-labs/sui');var _react = require('react');var _jsxruntime = require('react/jsx-runtime');function $(o){let{iframeClient:e,apiKeyEnvironment:r}=o;return _jsxruntime.jsx.call(void 0, _chunkKSUMPQNDcjs.a,{apiKeyEnvironment:r,settings:{walletConnectors:[_ethereum.EthereumWalletConnectors,_solana.SolanaWalletConnectors,_sui.SuiWalletConnectors],events:{onAuthFlowCancel(){console.log("[CryptoWalletConnectionHandler] onAuthFlowCancel"),e==null||e.send("crypto:connect-wallet.failed",{error:"Wallet connection was cancelled"})},onAuthFlowClose(){console.log("[CryptoWalletConnectionHandler] onAuthFlowClose")},onAuthFailure(n,t){console.error("[CryptoWalletConnectionHandler] onAuthFailure",n,t)},onAuthSuccess(n){console.log("[CryptoWalletConnectionHandler] onAuthSuccess",n)}},handlers:{handleConnectedWallet:n=>_chunk2WSEHVNPcjs.d.call(void 0, this,null,function*(){var l,u;console.log("[CryptoWalletConnectionHandler] handleConnectedWallet",n);let t=n.address;if(!t)return console.error("[CryptoWalletConnectionHandler] Failed to connect wallet: Could not retrieve wallet address"),e==null||e.send("crypto:connect-wallet.failed",{error:"Could not retrieve wallet address. Please ensure your wallet is properly connected and try again."}),!1;let a;try{a=yield _chunkPZ3KXKJDcjs.b.call(void 0, n)}catch(s){if(s instanceof _chunkPZ3KXKJDcjs.a){let h=r==="production"?"ethereum":"ethereum-sepolia",y=_commonsdkbase.blockchainToChainId.call(void 0, h);try{yield(l=n==null?void 0:n.connector)==null?void 0:l.switchNetwork({networkChainId:y}),a=h}catch(W){return console.error(`[CryptoWalletConnectionHandler] Failed to switch to default chain ${y}`,W),e==null||e.send("crypto:connect-wallet.failed",{error:`Chain with id ${s.chainId} is not supported. Please change the network in your wallet and try again.`}),!1}}else throw s}return e==null||e.send("crypto:connect-wallet.success",{address:t,chain:a,walletProviderKey:(u=n.connector)==null?void 0:u.key}),!0})}},children:_jsxruntime.jsx.call(void 0, v,_chunk2WSEHVNPcjs.a.call(void 0, {},o))})}function v({iframeClient:o}){let[e,r]=_react.useState.call(void 0, !1),{primaryWallet:n}=_sdkreactcore.useDynamicContext.call(void 0, );return _react.useEffect.call(void 0, ()=>{if(o==null)return;let t=o.on("crypto:connect-wallet.show",({show:a})=>{r(a)});return()=>{o.off(t)}},[o]),_react.useEffect.call(void 0, ()=>{if(o==null)return;let t=o.on("crypto:send-transaction",u=>_chunk2WSEHVNPcjs.d.call(void 0, this,[u],function*({chain:a,serializedTransaction:l}){if(n==null){console.error("[CryptoWalletConnectionHandler] signTransaction: primaryWallet is missing"),o.send("crypto:send-transaction:failed",{error:"primaryWallet is missing"});return}yield _chunkQI37PBS5cjs.a.call(void 0, n,a,l,o)}));return()=>{o.off(t)}},[o,n]),e?_jsxruntime.jsx.call(void 0, H,{setShowDynamicModal:r}):null}function H({setShowDynamicModal:o}){let e=_react.useContext.call(void 0, _sdkreactcore.DynamicContext);if(e==null)throw new Error("DynamicContext is missing");let{setShowAuthFlow:r,handleLogOut:n}=e;return _react.useEffect.call(void 0, ()=>{var t;(t=document.getElementById("crossmint-focus-target"))==null||t.focus(),_chunk2WSEHVNPcjs.d.call(void 0, this,null,function*(){yield n(),r(!0,{clearErrors:!0,emitCancelAuth:!0,ignoreIfIsEmbeddedWidget:!0,initializeWalletConnect:!0,performMultiWalletChecks:!1}),o(!1)})},[]),null}exports.CryptoWalletConnectionHandler = $; exports.ShowDynamicModal = H;
