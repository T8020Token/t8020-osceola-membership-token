import{a as C}from"../../../../chunk-5MZTUSMQ.js";import{a as w,b as f}from"../../../../chunk-4KDASQO6.js";import{a as m}from"../../../../chunk-LTY4MYLM.js";import{a as p,d as c}from"../../../../chunk-PXDN3KFO.js";import{blockchainToChainId as g}from"@crossmint/common-sdk-base";import{EthereumWalletConnectors as E}from"@dynamic-labs/ethereum";import{DynamicContext as S,useDynamicContext as A}from"@dynamic-labs/sdk-react-core";import{SolanaWalletConnectors as I}from"@dynamic-labs/solana";import{SuiWalletConnectors as k}from"@dynamic-labs/sui";import{useContext as D,useEffect as i,useState as F}from"react";import{jsx as d}from"react/jsx-runtime";function z(o){let{iframeClient:e,apiKeyEnvironment:r}=o;return d(m,{apiKeyEnvironment:r,settings:{walletConnectors:[E,I,k],events:{onAuthFlowCancel(){console.log("[CryptoWalletConnectionHandler] onAuthFlowCancel"),e==null||e.send("crypto:connect-wallet.failed",{error:"Wallet connection was cancelled"})},onAuthFlowClose(){console.log("[CryptoWalletConnectionHandler] onAuthFlowClose")},onAuthFailure(n,t){console.error("[CryptoWalletConnectionHandler] onAuthFailure",n,t)},onAuthSuccess(n){console.log("[CryptoWalletConnectionHandler] onAuthSuccess",n)}},handlers:{handleConnectedWallet:n=>c(this,null,function*(){var l,u;console.log("[CryptoWalletConnectionHandler] handleConnectedWallet",n);let t=n.address;if(!t)return console.error("[CryptoWalletConnectionHandler] Failed to connect wallet: Could not retrieve wallet address"),e==null||e.send("crypto:connect-wallet.failed",{error:"Could not retrieve wallet address. Please ensure your wallet is properly connected and try again."}),!1;let a;try{a=yield f(n)}catch(s){if(s instanceof w){let h=r==="production"?"ethereum":"ethereum-sepolia",y=g(h);try{yield(l=n==null?void 0:n.connector)==null?void 0:l.switchNetwork({networkChainId:y}),a=h}catch(W){return console.error(`[CryptoWalletConnectionHandler] Failed to switch to default chain ${y}`,W),e==null||e.send("crypto:connect-wallet.failed",{error:`Chain with id ${s.chainId} is not supported. Please change the network in your wallet and try again.`}),!1}}else throw s}return e==null||e.send("crypto:connect-wallet.success",{address:t,chain:a,walletProviderKey:(u=n.connector)==null?void 0:u.key}),!0})}},children:d(v,p({},o))})}function v({iframeClient:o}){let[e,r]=F(!1),{primaryWallet:n}=A();return i(()=>{if(o==null)return;let t=o.on("crypto:connect-wallet.show",({show:a})=>{r(a)});return()=>{o.off(t)}},[o]),i(()=>{if(o==null)return;let t=o.on("crypto:send-transaction",u=>c(this,[u],function*({chain:a,serializedTransaction:l}){if(n==null){console.error("[CryptoWalletConnectionHandler] signTransaction: primaryWallet is missing"),o.send("crypto:send-transaction:failed",{error:"primaryWallet is missing"});return}yield C(n,a,l,o)}));return()=>{o.off(t)}},[o,n]),e?d(H,{setShowDynamicModal:r}):null}function H({setShowDynamicModal:o}){let e=D(S);if(e==null)throw new Error("DynamicContext is missing");let{setShowAuthFlow:r,handleLogOut:n}=e;return i(()=>{var t;(t=document.getElementById("crossmint-focus-target"))==null||t.focus(),c(this,null,function*(){yield n(),r(!0,{clearErrors:!0,emitCancelAuth:!0,ignoreIfIsEmbeddedWidget:!0,initializeWalletConnect:!0,performMultiWalletChecks:!1}),o(!1)})},[]),null}export{z as CryptoWalletConnectionHandler,H as ShowDynamicModal};
