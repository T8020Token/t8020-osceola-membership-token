import { z } from 'zod';

declare const crossmintLogoColorsSchema: z.ZodObject<{
    icon: z.ZodDefault<z.ZodOptional<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
        type: z.ZodLiteral<"gradient">;
        from: z.ZodString;
        to: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        to: string;
        type: "gradient";
        from: string;
    }, {
        to: string;
        type: "gradient";
        from: string;
    }>, z.ZodObject<{
        type: z.ZodLiteral<"solid">;
        color: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        type: "solid";
        color: string;
    }, {
        type: "solid";
        color: string;
    }>]>>>;
    text: z.ZodDefault<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    text: string;
    icon: {
        to: string;
        type: "gradient";
        from: string;
    } | {
        type: "solid";
        color: string;
    };
}, {
    icon?: {
        to: string;
        type: "gradient";
        from: string;
    } | {
        type: "solid";
        color: string;
    } | undefined;
    text?: string | undefined;
}>;
declare const crossmintLogoDisplayTypeSchema: z.ZodDefault<z.ZodEnum<["icon-only", "icon-and-text"]>>;
declare const crossmintLogoColorsAndDisplayTypeRawSchema: z.ZodObject<{
    colors: z.ZodDefault<z.ZodOptional<z.ZodObject<{
        icon: z.ZodDefault<z.ZodOptional<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
            type: z.ZodLiteral<"gradient">;
            from: z.ZodString;
            to: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            to: string;
            type: "gradient";
            from: string;
        }, {
            to: string;
            type: "gradient";
            from: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"solid">;
            color: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "solid";
            color: string;
        }, {
            type: "solid";
            color: string;
        }>]>>>;
        text: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        text: string;
        icon: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        };
    }, {
        icon?: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        } | undefined;
        text?: string | undefined;
    }>>>;
    displayType: z.ZodDefault<z.ZodOptional<z.ZodDefault<z.ZodEnum<["icon-only", "icon-and-text"]>>>>;
}, "strip", z.ZodTypeAny, {
    colors: {
        text: string;
        icon: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        };
    };
    displayType: "icon-and-text" | "icon-only";
}, {
    colors?: {
        icon?: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        } | undefined;
        text?: string | undefined;
    } | undefined;
    displayType?: "icon-and-text" | "icon-only" | undefined;
}>;
declare const crossmintLogoColorsAndDisplayTypeSchema: z.ZodDefault<z.ZodOptional<z.ZodObject<{
    colors: z.ZodDefault<z.ZodOptional<z.ZodObject<{
        icon: z.ZodDefault<z.ZodOptional<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
            type: z.ZodLiteral<"gradient">;
            from: z.ZodString;
            to: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            to: string;
            type: "gradient";
            from: string;
        }, {
            to: string;
            type: "gradient";
            from: string;
        }>, z.ZodObject<{
            type: z.ZodLiteral<"solid">;
            color: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            type: "solid";
            color: string;
        }, {
            type: "solid";
            color: string;
        }>]>>>;
        text: z.ZodDefault<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        text: string;
        icon: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        };
    }, {
        icon?: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        } | undefined;
        text?: string | undefined;
    }>>>;
    displayType: z.ZodDefault<z.ZodOptional<z.ZodDefault<z.ZodEnum<["icon-only", "icon-and-text"]>>>>;
}, "strip", z.ZodTypeAny, {
    colors: {
        text: string;
        icon: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        };
    };
    displayType: "icon-and-text" | "icon-only";
}, {
    colors?: {
        icon?: {
            to: string;
            type: "gradient";
            from: string;
        } | {
            type: "solid";
            color: string;
        } | undefined;
        text?: string | undefined;
    } | undefined;
    displayType?: "icon-and-text" | "icon-only" | undefined;
}>>>;
type CrossmintLogoColorsAndDisplayType = z.infer<typeof crossmintLogoColorsAndDisplayTypeSchema>;

export { type CrossmintLogoColorsAndDisplayType, crossmintLogoColorsAndDisplayTypeRawSchema, crossmintLogoColorsAndDisplayTypeSchema, crossmintLogoColorsSchema, crossmintLogoDisplayTypeSchema };
