import * as react_jsx_runtime from 'react/jsx-runtime';
import { ReactNode } from 'react';
import { UIConfig } from '@crossmint/common-sdk-base';
import { LoginMethod, CrossmintAuthBaseProviderProps } from '@crossmint/client-sdk-react-base';

type AuthStep = "initial" | "otp" | "qrCode" | "web3" | "web3/metamask" | "web3/walletconnect";
interface AuthFormContextType {
    step: AuthStep;
    error: string | null;
    appearance?: UIConfig;
    termsOfServiceText?: string | ReactNode;
    authModalTitle?: string;
    loginMethods: LoginMethod[];
    defaultEmail?: string;
    baseUrl: string;
    setStep: (step: AuthStep) => void;
    setError: (error: string | null) => void;
    setDialogOpen: (open: boolean, successfulLogin?: boolean) => void;
}
type ContextInitialStateProps = {
    appearance?: UIConfig;
    loginMethods: LoginMethod[];
    termsOfServiceText?: string | ReactNode;
    authModalTitle?: string;
    createOnLogin?: CrossmintAuthBaseProviderProps;
    baseUrl: string;
    defaultEmail?: string;
};
type AuthFormProviderProps = {
    setDialogOpen?: (open: boolean, successfulLogin?: boolean) => void;
    initialState: ContextInitialStateProps;
    children: ReactNode;
};
declare const useAuthForm: () => AuthFormContextType;
declare const AuthFormProvider: ({ setDialogOpen, initialState, children }: AuthFormProviderProps) => react_jsx_runtime.JSX.Element;

export { AuthFormProvider, useAuthForm };
