import z__default from 'zod';

declare const orderSchema: z__default.ZodObject<{
    orderId: z__default.ZodString;
    phase: z__default.ZodEnum<["quote", "payment", "delivery", "completed"]>;
    locale: z__default.ZodNativeEnum<{
        readonly EN_US: "en-US";
        readonly ES_ES: "es-ES";
        readonly FR_FR: "fr-FR";
        readonly IT_IT: "it-IT";
        readonly KO_KR: "ko-KR";
        readonly PT_PT: "pt-PT";
        readonly JA_JP: "ja-JP";
        readonly ZH_CN: "zh-CN";
        readonly ZH_TW: "zh-TW";
        readonly DE_DE: "de-DE";
        readonly RU_RU: "ru-RU";
        readonly TR_TR: "tr-TR";
        readonly UK_UA: "uk-UA";
        readonly TH_TH: "th-TH";
        readonly VI_VN: "vi-VN";
        readonly KLINGON: "Klingon";
    }>;
    lineItems: z__default.ZodArray<z__default.ZodObject<{
        chain: z__default.ZodNativeEnum<{
            readonly ETHEREUM: "ethereum";
            readonly POLYGON: "polygon";
            readonly BSC: "bsc";
            readonly OPTIMISM: "optimism";
            readonly ARBITRUM: "arbitrum";
            readonly BASE: "base";
            readonly ZORA: "zora";
            readonly ARBITRUM_NOVA: "arbitrumnova";
            readonly ASTAR_ZKEVM: "astar-zkevm";
            readonly APECHAIN: "apechain";
            readonly APEX: "apex";
            readonly BOSS: "boss";
            readonly LIGHTLINK: "lightlink";
            readonly SKALE_NEBULA: "skale-nebula";
            readonly SEI_PACIFIC_1: "sei-pacific-1";
            readonly CHILIZ: "chiliz";
            readonly AVALANCHE: "avalanche";
            readonly XAI: "xai";
            readonly SHAPE: "shape";
            readonly RARI: "rari";
            readonly SCROLL: "scroll";
            readonly VICTION: "viction";
            readonly MODE: "mode";
            readonly SPACE: "space";
            readonly SONEIUM: "soneium";
            readonly ARBITRUM_SEPOLIA: "arbitrum-sepolia";
            readonly AVALANCHE_FUJI: "avalanche-fuji";
            readonly CURTIS: "curtis";
            readonly BARRET_TESTNET: "barret-testnet";
            readonly BASE_GOERLI: "base-goerli";
            readonly BASE_SEPOLIA: "base-sepolia";
            readonly BSC_TESTNET: "bsc-testnet";
            readonly CHILIZ_SPICY_TESTNET: "chiliz-spicy-testnet";
            readonly ETHEREUM_GOERLI: "ethereum-goerli";
            readonly ETHEREUM_SEPOLIA: "ethereum-sepolia";
            readonly HYPERSONIC_TESTNET: "hypersonic-testnet";
            readonly LIGHTLINK_PEGASUS: "lightlink-pegasus";
            readonly OPTIMISM_GOERLI: "optimism-goerli";
            readonly OPTIMISM_SEPOLIA: "optimism-sepolia";
            readonly POLYGON_AMOY: "polygon-amoy";
            readonly POLYGON_MUMBAI: "polygon-mumbai";
            readonly PRIVATE_TESTNET_ETHEREUM: "crossmint-private-testnet-ethereum";
            readonly PRIVATE_TESTNET_POLYGON: "crossmint-private-testnet-polygon";
            readonly RARI_TESTNET: "rari-testnet";
            readonly SCROLL_SEPOLIA: "scroll-sepolia";
            readonly SEI_ATLANTIC_2_TESTNET: "sei-atlantic-2-testnet";
            readonly SHAPE_SEPOLIA: "shape-sepolia";
            readonly SKALE_NEBULA_TESTNET: "skale-nebula-testnet";
            readonly SONEIUM_MINATO_TESTNET: "soneium-minato-testnet";
            readonly SPACE_TESTNET: "space-testnet";
            readonly STORY_TESTNET: "story-testnet";
            readonly VERIFY_TESTNET: "verify-testnet";
            readonly VICTION_TESTNET: "viction-testnet";
            readonly XAI_SEPOLIA_TESTNET: "xai-sepolia-testnet";
            readonly ZKATANA: "zkatana";
            readonly ZKYOTO: "zkyoto";
            readonly ZORA_GOERLI: "zora-goerli";
            readonly ZORA_SEPOLIA: "zora-sepolia";
            readonly MODE_SEPOLIA: "mode-sepolia";
            readonly SOLANA: "solana";
            readonly SUI: "sui";
            readonly APTOS: "aptos";
        }>;
        quantity: z__default.ZodEffects<z__default.ZodNumber, number, number>;
        slippageBps: z__default.ZodOptional<z__default.ZodNumber>;
        callData: z__default.ZodOptional<z__default.ZodRecord<z__default.ZodString, z__default.ZodAny>>;
        metadata: z__default.ZodObject<{
            description: z__default.ZodString;
            name: z__default.ZodString;
            imageUrl: z__default.ZodString;
            collection: z__default.ZodOptional<z__default.ZodObject<{
                name: z__default.ZodOptional<z__default.ZodString>;
                description: z__default.ZodOptional<z__default.ZodString>;
                imageUrl: z__default.ZodOptional<z__default.ZodString>;
            }, "strip", z__default.ZodTypeAny, {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            }, {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            }>>;
        }, "strip", z__default.ZodTypeAny, {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        }, {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        }>;
        quote: z__default.ZodObject<{
            status: z__default.ZodEnum<["item-unavailable", "valid", "expired", "requires-recipient"]>;
            unavailabilityReason: z__default.ZodOptional<z__default.ZodObject<{
                code: z__default.ZodEnum<["to", "do"]>;
                message: z__default.ZodString;
            }, "strip", z__default.ZodTypeAny, {
                code: "to" | "do";
                message: string;
            }, {
                code: "to" | "do";
                message: string;
            }>>;
            charges: z__default.ZodOptional<z__default.ZodObject<{
                unit: z__default.ZodObject<{
                    amount: z__default.ZodString;
                    currency: z__default.ZodUnion<[
                        z__default.ZodNativeEnum<{
                            readonly ETH: "eth";
                            readonly SOL: "sol";
                            readonly MATIC: "matic";
                            readonly USDC: "usdc";
                            readonly USDXM: "usdxm";
                            readonly DEGEN: "degen";
                            readonly BRETT: "brett";
                            readonly TOSHI: "toshi";
                            readonly BONK: "bonk";
                            readonly WIF: "wif";
                            readonly MOTHER: "mother";
                            readonly EURC: "eurc";
                            readonly SUPERVERSE: "superverse";
                        }>,
                        z__default.ZodNativeEnum<{
                            readonly USD: "usd";
                            readonly EUR: "eur";
                            readonly AUD: "aud";
                            readonly GBP: "gbp";
                            readonly JPY: "jpy";
                            readonly SGD: "sgd";
                            readonly HKD: "hkd";
                            readonly KRW: "krw";
                            readonly INR: "inr";
                            readonly VND: "vnd";
                        }>
                    ]>;
                }, "strip", z__default.ZodTypeAny, {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                }, {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                }>;
                gas: z__default.ZodOptional<z__default.ZodObject<{
                    amount: z__default.ZodString;
                    currency: z__default.ZodUnion<[
                        z__default.ZodNativeEnum<{
                            readonly ETH: "eth";
                            readonly SOL: "sol";
                            readonly MATIC: "matic";
                            readonly USDC: "usdc";
                            readonly USDXM: "usdxm";
                            readonly DEGEN: "degen";
                            readonly BRETT: "brett";
                            readonly TOSHI: "toshi";
                            readonly BONK: "bonk";
                            readonly WIF: "wif";
                            readonly MOTHER: "mother";
                            readonly EURC: "eurc";
                            readonly SUPERVERSE: "superverse";
                        }>,
                        z__default.ZodNativeEnum<{
                            readonly USD: "usd";
                            readonly EUR: "eur";
                            readonly AUD: "aud";
                            readonly GBP: "gbp";
                            readonly JPY: "jpy";
                            readonly SGD: "sgd";
                            readonly HKD: "hkd";
                            readonly KRW: "krw";
                            readonly INR: "inr";
                            readonly VND: "vnd";
                        }>
                    ]>;
                }, "strip", z__default.ZodTypeAny, {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                }, {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                }>>;
            }, "strip", z__default.ZodTypeAny, {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            }, {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            }>>;
            totalPrice: z__default.ZodOptional<z__default.ZodObject<{
                amount: z__default.ZodString;
                currency: z__default.ZodUnion<[
                    z__default.ZodNativeEnum<{
                        readonly ETH: "eth";
                        readonly SOL: "sol";
                        readonly MATIC: "matic";
                        readonly USDC: "usdc";
                        readonly USDXM: "usdxm";
                        readonly DEGEN: "degen";
                        readonly BRETT: "brett";
                        readonly TOSHI: "toshi";
                        readonly BONK: "bonk";
                        readonly WIF: "wif";
                        readonly MOTHER: "mother";
                        readonly EURC: "eurc";
                        readonly SUPERVERSE: "superverse";
                    }>,
                    z__default.ZodNativeEnum<{
                        readonly USD: "usd";
                        readonly EUR: "eur";
                        readonly AUD: "aud";
                        readonly GBP: "gbp";
                        readonly JPY: "jpy";
                        readonly SGD: "sgd";
                        readonly HKD: "hkd";
                        readonly KRW: "krw";
                        readonly INR: "inr";
                        readonly VND: "vnd";
                    }>
                ]>;
            }, "strip", z__default.ZodTypeAny, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }>>;
        }, "strip", z__default.ZodTypeAny, {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        }, {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        }>;
        delivery: z__default.ZodUnion<[
            z__default.ZodObject<{
                status: z__default.ZodEnum<["awaiting-payment", "in-progress", "failed"]>;
                recipient: z__default.ZodOptional<z__default.ZodUnion<[
                    z__default.ZodObject<{
                        walletAddress: z__default.ZodString;
                        locator: z__default.ZodString;
                        physicalAddress: z__default.ZodOptional<z__default.ZodEffects<z__default.ZodObject<{
                            name: z__default.ZodString;
                            line1: z__default.ZodString;
                            line2: z__default.ZodOptional<z__default.ZodString>;
                            city: z__default.ZodString;
                            state: z__default.ZodOptional<z__default.ZodString>;
                            postalCode: z__default.ZodString;
                            country: z__default.ZodString;
                        }, "strip", z__default.ZodTypeAny, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>>;
                    }, "strip", z__default.ZodTypeAny, {
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }, {
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }>,
                    z__default.ZodObject<{
                        walletAddress: z__default.ZodString;
                        physicalAddress: z__default.ZodOptional<z__default.ZodEffects<z__default.ZodObject<{
                            name: z__default.ZodString;
                            line1: z__default.ZodString;
                            line2: z__default.ZodOptional<z__default.ZodString>;
                            city: z__default.ZodString;
                            state: z__default.ZodOptional<z__default.ZodString>;
                            postalCode: z__default.ZodString;
                            country: z__default.ZodString;
                        }, "strip", z__default.ZodTypeAny, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>>;
                        locator: z__default.ZodString;
                        email: z__default.ZodString;
                    }, "strip", z__default.ZodTypeAny, {
                        email: string;
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }, {
                        email: string;
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }>
                ]>>;
            }, "strip", z__default.ZodTypeAny, {
                status: "awaiting-payment" | "in-progress" | "failed";
                recipient?: {
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | {
                    email: string;
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | undefined;
            }, {
                status: "awaiting-payment" | "in-progress" | "failed";
                recipient?: {
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | {
                    email: string;
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | undefined;
            }>,
            z__default.ZodObject<{
                status: z__default.ZodLiteral<"completed">;
                recipient: z__default.ZodOptional<z__default.ZodUnion<[
                    z__default.ZodObject<{
                        walletAddress: z__default.ZodString;
                        locator: z__default.ZodString;
                        physicalAddress: z__default.ZodOptional<z__default.ZodEffects<z__default.ZodObject<{
                            name: z__default.ZodString;
                            line1: z__default.ZodString;
                            line2: z__default.ZodOptional<z__default.ZodString>;
                            city: z__default.ZodString;
                            state: z__default.ZodOptional<z__default.ZodString>;
                            postalCode: z__default.ZodString;
                            country: z__default.ZodString;
                        }, "strip", z__default.ZodTypeAny, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>>;
                    }, "strip", z__default.ZodTypeAny, {
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }, {
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }>,
                    z__default.ZodObject<{
                        walletAddress: z__default.ZodString;
                        physicalAddress: z__default.ZodOptional<z__default.ZodEffects<z__default.ZodObject<{
                            name: z__default.ZodString;
                            line1: z__default.ZodString;
                            line2: z__default.ZodOptional<z__default.ZodString>;
                            city: z__default.ZodString;
                            state: z__default.ZodOptional<z__default.ZodString>;
                            postalCode: z__default.ZodString;
                            country: z__default.ZodString;
                        }, "strip", z__default.ZodTypeAny, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }, {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        }>>;
                        locator: z__default.ZodString;
                        email: z__default.ZodString;
                    }, "strip", z__default.ZodTypeAny, {
                        email: string;
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }, {
                        email: string;
                        walletAddress: string;
                        locator: string;
                        physicalAddress?: {
                            name: string;
                            line1: string;
                            city: string;
                            postalCode: string;
                            country: string;
                            line2?: string | undefined;
                            state?: string | undefined;
                        } | undefined;
                    }>
                ]>>;
                txId: z__default.ZodString;
                tokens: z__default.ZodArray<z__default.ZodUnion<[
                    z__default.ZodObject<{
                        contractAddress: z__default.ZodString;
                        tokenId: z__default.ZodString;
                        locator: z__default.ZodString;
                    }, "strip", z__default.ZodTypeAny, {
                        locator: string;
                        contractAddress: string;
                        tokenId: string;
                    }, {
                        locator: string;
                        contractAddress: string;
                        tokenId: string;
                    }>,
                    z__default.ZodObject<{
                        mintHash: z__default.ZodString;
                        locator: z__default.ZodString;
                    }, "strip", z__default.ZodTypeAny, {
                        locator: string;
                        mintHash: string;
                    }, {
                        locator: string;
                        mintHash: string;
                    }>
                ]>, "many">;
            }, "strip", z__default.ZodTypeAny, {
                status: "completed";
                txId: string;
                tokens: ({
                    locator: string;
                    contractAddress: string;
                    tokenId: string;
                } | {
                    locator: string;
                    mintHash: string;
                })[];
                recipient?: {
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | {
                    email: string;
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | undefined;
            }, {
                status: "completed";
                txId: string;
                tokens: ({
                    locator: string;
                    contractAddress: string;
                    tokenId: string;
                } | {
                    locator: string;
                    mintHash: string;
                })[];
                recipient?: {
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | {
                    email: string;
                    walletAddress: string;
                    locator: string;
                    physicalAddress?: {
                        name: string;
                        line1: string;
                        city: string;
                        postalCode: string;
                        country: string;
                        line2?: string | undefined;
                        state?: string | undefined;
                    } | undefined;
                } | undefined;
            }>
        ]>;
    }, "strip", z__default.ZodTypeAny, {
        chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        quantity: number;
        metadata: {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        };
        quote: {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        };
        delivery: {
            status: "completed";
            txId: string;
            tokens: ({
                locator: string;
                contractAddress: string;
                tokenId: string;
            } | {
                locator: string;
                mintHash: string;
            })[];
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        } | {
            status: "awaiting-payment" | "in-progress" | "failed";
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        };
        slippageBps?: number | undefined;
        callData?: Record<string, any> | undefined;
    }, {
        chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        quantity: number;
        metadata: {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        };
        quote: {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        };
        delivery: {
            status: "completed";
            txId: string;
            tokens: ({
                locator: string;
                contractAddress: string;
                tokenId: string;
            } | {
                locator: string;
                mintHash: string;
            })[];
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        } | {
            status: "awaiting-payment" | "in-progress" | "failed";
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        };
        slippageBps?: number | undefined;
        callData?: Record<string, any> | undefined;
    }>, "many">;
    quote: z__default.ZodObject<{
        status: z__default.ZodEnum<[
            "requires-recipient",
            "requires-physical-address",
            "all-line-items-unavailable",
            "valid",
            "expired"
        ]>;
        quotedAt: z__default.ZodOptional<z__default.ZodString>;
        expiresAt: z__default.ZodOptional<z__default.ZodString>;
        totalPrice: z__default.ZodOptional<z__default.ZodObject<{
            amount: z__default.ZodString;
            currency: z__default.ZodUnion<[
                z__default.ZodNativeEnum<{
                    readonly ETH: "eth";
                    readonly SOL: "sol";
                    readonly MATIC: "matic";
                    readonly USDC: "usdc";
                    readonly USDXM: "usdxm";
                    readonly DEGEN: "degen";
                    readonly BRETT: "brett";
                    readonly TOSHI: "toshi";
                    readonly BONK: "bonk";
                    readonly WIF: "wif";
                    readonly MOTHER: "mother";
                    readonly EURC: "eurc";
                    readonly SUPERVERSE: "superverse";
                }>,
                z__default.ZodNativeEnum<{
                    readonly USD: "usd";
                    readonly EUR: "eur";
                    readonly AUD: "aud";
                    readonly GBP: "gbp";
                    readonly JPY: "jpy";
                    readonly SGD: "sgd";
                    readonly HKD: "hkd";
                    readonly KRW: "krw";
                    readonly INR: "inr";
                    readonly VND: "vnd";
                }>
            ]>;
        }, "strip", z__default.ZodTypeAny, {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        }, {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        }>>;
    }, "strip", z__default.ZodTypeAny, {
        status: "valid" | "expired" | "requires-recipient" | "requires-physical-address" | "all-line-items-unavailable";
        quotedAt?: string | undefined;
        expiresAt?: string | undefined;
        totalPrice?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | undefined;
    }, {
        status: "valid" | "expired" | "requires-recipient" | "requires-physical-address" | "all-line-items-unavailable";
        quotedAt?: string | undefined;
        expiresAt?: string | undefined;
        totalPrice?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | undefined;
    }>;
    payment: z__default.ZodObject<{
        status: z__default.ZodEnum<[
            "requires-quote",
            "requires-crypto-payer-address",
            "requires-email",
            "crypto-payer-insufficient-funds",
            "awaiting-payment",
            "in-progress",
            "completed"
        ]>;
        failureReason: z__default.ZodOptional<z__default.ZodUnion<[
            z__default.ZodObject<{
                code: z__default.ZodString;
                message: z__default.ZodOptional<z__default.ZodString>;
            }, "strip", z__default.ZodTypeAny, {
                code: string;
                message?: string | undefined;
            }, {
                code: string;
                message?: string | undefined;
            }>,
            z__default.ZodObject<{
                code: z__default.ZodNativeEnum<{
                    readonly UNKNOWN: "unknown";
                    readonly TX_ID_NOT_FOUND: "tx-id-not-found";
                    readonly INSUFFICIENT_FUNDS: "insufficient-funds";
                }>;
                message: z__default.ZodOptional<z__default.ZodString>;
            }, "strip", z__default.ZodTypeAny, {
                code: "unknown" | "tx-id-not-found" | "insufficient-funds";
                message?: string | undefined;
            }, {
                code: "unknown" | "tx-id-not-found" | "insufficient-funds";
                message?: string | undefined;
            }>
        ]>>;
        method: z__default.ZodNativeEnum<{
            readonly ETHEREUM: "ethereum";
            readonly POLYGON: "polygon";
            readonly BSC: "bsc";
            readonly OPTIMISM: "optimism";
            readonly ARBITRUM: "arbitrum";
            readonly BASE: "base";
            readonly ZORA: "zora";
            readonly ARBITRUM_NOVA: "arbitrumnova";
            readonly ASTAR_ZKEVM: "astar-zkevm";
            readonly APECHAIN: "apechain";
            readonly APEX: "apex";
            readonly BOSS: "boss";
            readonly LIGHTLINK: "lightlink";
            readonly SKALE_NEBULA: "skale-nebula";
            readonly SEI_PACIFIC_1: "sei-pacific-1";
            readonly CHILIZ: "chiliz";
            readonly AVALANCHE: "avalanche";
            readonly XAI: "xai";
            readonly SHAPE: "shape";
            readonly RARI: "rari";
            readonly SCROLL: "scroll";
            readonly VICTION: "viction";
            readonly MODE: "mode";
            readonly SPACE: "space";
            readonly SONEIUM: "soneium";
            readonly ARBITRUM_SEPOLIA: "arbitrum-sepolia";
            readonly AVALANCHE_FUJI: "avalanche-fuji";
            readonly CURTIS: "curtis";
            readonly BARRET_TESTNET: "barret-testnet";
            readonly BASE_GOERLI: "base-goerli";
            readonly BASE_SEPOLIA: "base-sepolia";
            readonly BSC_TESTNET: "bsc-testnet";
            readonly CHILIZ_SPICY_TESTNET: "chiliz-spicy-testnet";
            readonly ETHEREUM_GOERLI: "ethereum-goerli";
            readonly ETHEREUM_SEPOLIA: "ethereum-sepolia";
            readonly HYPERSONIC_TESTNET: "hypersonic-testnet";
            readonly LIGHTLINK_PEGASUS: "lightlink-pegasus";
            readonly OPTIMISM_GOERLI: "optimism-goerli";
            readonly OPTIMISM_SEPOLIA: "optimism-sepolia";
            readonly POLYGON_AMOY: "polygon-amoy";
            readonly POLYGON_MUMBAI: "polygon-mumbai";
            readonly PRIVATE_TESTNET_ETHEREUM: "crossmint-private-testnet-ethereum";
            readonly PRIVATE_TESTNET_POLYGON: "crossmint-private-testnet-polygon";
            readonly RARI_TESTNET: "rari-testnet";
            readonly SCROLL_SEPOLIA: "scroll-sepolia";
            readonly SEI_ATLANTIC_2_TESTNET: "sei-atlantic-2-testnet";
            readonly SHAPE_SEPOLIA: "shape-sepolia";
            readonly SKALE_NEBULA_TESTNET: "skale-nebula-testnet";
            readonly SONEIUM_MINATO_TESTNET: "soneium-minato-testnet";
            readonly SPACE_TESTNET: "space-testnet";
            readonly STORY_TESTNET: "story-testnet";
            readonly VERIFY_TESTNET: "verify-testnet";
            readonly VICTION_TESTNET: "viction-testnet";
            readonly XAI_SEPOLIA_TESTNET: "xai-sepolia-testnet";
            readonly ZKATANA: "zkatana";
            readonly ZKYOTO: "zkyoto";
            readonly ZORA_GOERLI: "zora-goerli";
            readonly ZORA_SEPOLIA: "zora-sepolia";
            readonly MODE_SEPOLIA: "mode-sepolia";
            readonly SOLANA: "solana";
            readonly "stripe-payment-element": "stripe-payment-element";
        }>;
        currency: z__default.ZodUnion<[
            z__default.ZodNativeEnum<{
                readonly ETH: "eth";
                readonly SOL: "sol";
                readonly MATIC: "matic";
                readonly USDC: "usdc";
                readonly USDXM: "usdxm";
                readonly DEGEN: "degen";
                readonly BRETT: "brett";
                readonly TOSHI: "toshi";
                readonly BONK: "bonk";
                readonly WIF: "wif";
                readonly MOTHER: "mother";
                readonly EURC: "eurc";
                readonly SUPERVERSE: "superverse";
            }>,
            z__default.ZodNativeEnum<{
                readonly USD: "usd";
                readonly EUR: "eur";
                readonly AUD: "aud";
                readonly GBP: "gbp";
                readonly JPY: "jpy";
                readonly SGD: "sgd";
                readonly HKD: "hkd";
                readonly KRW: "krw";
                readonly INR: "inr";
                readonly VND: "vnd";
            }>
        ]>;
        preparation: z__default.ZodOptional<z__default.ZodUnion<[
            z__default.ZodObject<{
                chain: z__default.ZodOptional<z__default.ZodNativeEnum<{
                    readonly ETHEREUM: "ethereum";
                    readonly POLYGON: "polygon";
                    readonly BSC: "bsc";
                    readonly OPTIMISM: "optimism";
                    readonly ARBITRUM: "arbitrum";
                    readonly BASE: "base";
                    readonly ZORA: "zora";
                    readonly ARBITRUM_NOVA: "arbitrumnova";
                    readonly ASTAR_ZKEVM: "astar-zkevm";
                    readonly APECHAIN: "apechain";
                    readonly APEX: "apex";
                    readonly BOSS: "boss";
                    readonly LIGHTLINK: "lightlink";
                    readonly SKALE_NEBULA: "skale-nebula";
                    readonly SEI_PACIFIC_1: "sei-pacific-1";
                    readonly CHILIZ: "chiliz";
                    readonly AVALANCHE: "avalanche";
                    readonly XAI: "xai";
                    readonly SHAPE: "shape";
                    readonly RARI: "rari";
                    readonly SCROLL: "scroll";
                    readonly VICTION: "viction";
                    readonly MODE: "mode";
                    readonly SPACE: "space";
                    readonly SONEIUM: "soneium";
                    readonly ARBITRUM_SEPOLIA: "arbitrum-sepolia";
                    readonly AVALANCHE_FUJI: "avalanche-fuji";
                    readonly CURTIS: "curtis";
                    readonly BARRET_TESTNET: "barret-testnet";
                    readonly BASE_GOERLI: "base-goerli";
                    readonly BASE_SEPOLIA: "base-sepolia";
                    readonly BSC_TESTNET: "bsc-testnet";
                    readonly CHILIZ_SPICY_TESTNET: "chiliz-spicy-testnet";
                    readonly ETHEREUM_GOERLI: "ethereum-goerli";
                    readonly ETHEREUM_SEPOLIA: "ethereum-sepolia";
                    readonly HYPERSONIC_TESTNET: "hypersonic-testnet";
                    readonly LIGHTLINK_PEGASUS: "lightlink-pegasus";
                    readonly OPTIMISM_GOERLI: "optimism-goerli";
                    readonly OPTIMISM_SEPOLIA: "optimism-sepolia";
                    readonly POLYGON_AMOY: "polygon-amoy";
                    readonly POLYGON_MUMBAI: "polygon-mumbai";
                    readonly PRIVATE_TESTNET_ETHEREUM: "crossmint-private-testnet-ethereum";
                    readonly PRIVATE_TESTNET_POLYGON: "crossmint-private-testnet-polygon";
                    readonly RARI_TESTNET: "rari-testnet";
                    readonly SCROLL_SEPOLIA: "scroll-sepolia";
                    readonly SEI_ATLANTIC_2_TESTNET: "sei-atlantic-2-testnet";
                    readonly SHAPE_SEPOLIA: "shape-sepolia";
                    readonly SKALE_NEBULA_TESTNET: "skale-nebula-testnet";
                    readonly SONEIUM_MINATO_TESTNET: "soneium-minato-testnet";
                    readonly SPACE_TESTNET: "space-testnet";
                    readonly STORY_TESTNET: "story-testnet";
                    readonly VERIFY_TESTNET: "verify-testnet";
                    readonly VICTION_TESTNET: "viction-testnet";
                    readonly XAI_SEPOLIA_TESTNET: "xai-sepolia-testnet";
                    readonly ZKATANA: "zkatana";
                    readonly ZKYOTO: "zkyoto";
                    readonly ZORA_GOERLI: "zora-goerli";
                    readonly ZORA_SEPOLIA: "zora-sepolia";
                    readonly MODE_SEPOLIA: "mode-sepolia";
                    readonly SOLANA: "solana";
                    readonly SUI: "sui";
                    readonly APTOS: "aptos";
                }>>;
                payerAddress: z__default.ZodOptional<z__default.ZodString>;
                serializedTransaction: z__default.ZodOptional<z__default.ZodString>;
            }, "strip", z__default.ZodTypeAny, {
                chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
                payerAddress?: string | undefined;
                serializedTransaction?: string | undefined;
            }, {
                chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
                payerAddress?: string | undefined;
                serializedTransaction?: string | undefined;
            }>,
            z__default.ZodObject<{
                stripeClientSecret: z__default.ZodOptional<z__default.ZodString>;
                stripePublishableKey: z__default.ZodString;
                stripeEphemeralKeySecret: z__default.ZodOptional<z__default.ZodString>;
                stripeSubscriptionId: z__default.ZodOptional<z__default.ZodString>;
            }, "strip", z__default.ZodTypeAny, {
                stripePublishableKey: string;
                stripeClientSecret?: string | undefined;
                stripeEphemeralKeySecret?: string | undefined;
                stripeSubscriptionId?: string | undefined;
            }, {
                stripePublishableKey: string;
                stripeClientSecret?: string | undefined;
                stripeEphemeralKeySecret?: string | undefined;
                stripeSubscriptionId?: string | undefined;
            }>
        ]>>;
        received: z__default.ZodOptional<z__default.ZodUnion<[
            z__default.ZodObject<{
                currency: z__default.ZodUnion<[
                    z__default.ZodNativeEnum<{
                        readonly ETH: "eth";
                        readonly SOL: "sol";
                        readonly MATIC: "matic";
                        readonly USDC: "usdc";
                        readonly USDXM: "usdxm";
                        readonly DEGEN: "degen";
                        readonly BRETT: "brett";
                        readonly TOSHI: "toshi";
                        readonly BONK: "bonk";
                        readonly WIF: "wif";
                        readonly MOTHER: "mother";
                        readonly EURC: "eurc";
                        readonly SUPERVERSE: "superverse";
                    }>,
                    z__default.ZodNativeEnum<{
                        readonly USD: "usd";
                        readonly EUR: "eur";
                        readonly AUD: "aud";
                        readonly GBP: "gbp";
                        readonly JPY: "jpy";
                        readonly SGD: "sgd";
                        readonly HKD: "hkd";
                        readonly KRW: "krw";
                        readonly INR: "inr";
                        readonly VND: "vnd";
                    }>
                ]>;
                amount: z__default.ZodString;
                txId: z__default.ZodString;
                chain: z__default.ZodNativeEnum<{
                    readonly ETHEREUM: "ethereum";
                    readonly POLYGON: "polygon";
                    readonly BSC: "bsc";
                    readonly OPTIMISM: "optimism";
                    readonly ARBITRUM: "arbitrum";
                    readonly BASE: "base";
                    readonly ZORA: "zora";
                    readonly ARBITRUM_NOVA: "arbitrumnova";
                    readonly ASTAR_ZKEVM: "astar-zkevm";
                    readonly APECHAIN: "apechain";
                    readonly APEX: "apex";
                    readonly BOSS: "boss";
                    readonly LIGHTLINK: "lightlink";
                    readonly SKALE_NEBULA: "skale-nebula";
                    readonly SEI_PACIFIC_1: "sei-pacific-1";
                    readonly CHILIZ: "chiliz";
                    readonly AVALANCHE: "avalanche";
                    readonly XAI: "xai";
                    readonly SHAPE: "shape";
                    readonly RARI: "rari";
                    readonly SCROLL: "scroll";
                    readonly VICTION: "viction";
                    readonly MODE: "mode";
                    readonly SPACE: "space";
                    readonly SONEIUM: "soneium";
                    readonly ARBITRUM_SEPOLIA: "arbitrum-sepolia";
                    readonly AVALANCHE_FUJI: "avalanche-fuji";
                    readonly CURTIS: "curtis";
                    readonly BARRET_TESTNET: "barret-testnet";
                    readonly BASE_GOERLI: "base-goerli";
                    readonly BASE_SEPOLIA: "base-sepolia";
                    readonly BSC_TESTNET: "bsc-testnet";
                    readonly CHILIZ_SPICY_TESTNET: "chiliz-spicy-testnet";
                    readonly ETHEREUM_GOERLI: "ethereum-goerli";
                    readonly ETHEREUM_SEPOLIA: "ethereum-sepolia";
                    readonly HYPERSONIC_TESTNET: "hypersonic-testnet";
                    readonly LIGHTLINK_PEGASUS: "lightlink-pegasus";
                    readonly OPTIMISM_GOERLI: "optimism-goerli";
                    readonly OPTIMISM_SEPOLIA: "optimism-sepolia";
                    readonly POLYGON_AMOY: "polygon-amoy";
                    readonly POLYGON_MUMBAI: "polygon-mumbai";
                    readonly PRIVATE_TESTNET_ETHEREUM: "crossmint-private-testnet-ethereum";
                    readonly PRIVATE_TESTNET_POLYGON: "crossmint-private-testnet-polygon";
                    readonly RARI_TESTNET: "rari-testnet";
                    readonly SCROLL_SEPOLIA: "scroll-sepolia";
                    readonly SEI_ATLANTIC_2_TESTNET: "sei-atlantic-2-testnet";
                    readonly SHAPE_SEPOLIA: "shape-sepolia";
                    readonly SKALE_NEBULA_TESTNET: "skale-nebula-testnet";
                    readonly SONEIUM_MINATO_TESTNET: "soneium-minato-testnet";
                    readonly SPACE_TESTNET: "space-testnet";
                    readonly STORY_TESTNET: "story-testnet";
                    readonly VERIFY_TESTNET: "verify-testnet";
                    readonly VICTION_TESTNET: "viction-testnet";
                    readonly XAI_SEPOLIA_TESTNET: "xai-sepolia-testnet";
                    readonly ZKATANA: "zkatana";
                    readonly ZKYOTO: "zkyoto";
                    readonly ZORA_GOERLI: "zora-goerli";
                    readonly ZORA_SEPOLIA: "zora-sepolia";
                    readonly MODE_SEPOLIA: "mode-sepolia";
                    readonly SOLANA: "solana";
                    readonly SUI: "sui";
                    readonly APTOS: "aptos";
                }>;
            }, "strip", z__default.ZodTypeAny, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
                txId: string;
                chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
            }, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
                txId: string;
                chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
            }>,
            z__default.ZodObject<{
                amount: z__default.ZodString;
                currency: z__default.ZodUnion<[
                    z__default.ZodNativeEnum<{
                        readonly ETH: "eth";
                        readonly SOL: "sol";
                        readonly MATIC: "matic";
                        readonly USDC: "usdc";
                        readonly USDXM: "usdxm";
                        readonly DEGEN: "degen";
                        readonly BRETT: "brett";
                        readonly TOSHI: "toshi";
                        readonly BONK: "bonk";
                        readonly WIF: "wif";
                        readonly MOTHER: "mother";
                        readonly EURC: "eurc";
                        readonly SUPERVERSE: "superverse";
                    }>,
                    z__default.ZodNativeEnum<{
                        readonly USD: "usd";
                        readonly EUR: "eur";
                        readonly AUD: "aud";
                        readonly GBP: "gbp";
                        readonly JPY: "jpy";
                        readonly SGD: "sgd";
                        readonly HKD: "hkd";
                        readonly KRW: "krw";
                        readonly INR: "inr";
                        readonly VND: "vnd";
                    }>
                ]>;
            }, "strip", z__default.ZodTypeAny, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }>
        ]>>;
        refunded: z__default.ZodOptional<z__default.ZodUnion<[
            z__default.ZodObject<{
                currency: z__default.ZodUnion<[
                    z__default.ZodNativeEnum<{
                        readonly ETH: "eth";
                        readonly SOL: "sol";
                        readonly MATIC: "matic";
                        readonly USDC: "usdc";
                        readonly USDXM: "usdxm";
                        readonly DEGEN: "degen";
                        readonly BRETT: "brett";
                        readonly TOSHI: "toshi";
                        readonly BONK: "bonk";
                        readonly WIF: "wif";
                        readonly MOTHER: "mother";
                        readonly EURC: "eurc";
                        readonly SUPERVERSE: "superverse";
                    }>,
                    z__default.ZodNativeEnum<{
                        readonly USD: "usd";
                        readonly EUR: "eur";
                        readonly AUD: "aud";
                        readonly GBP: "gbp";
                        readonly JPY: "jpy";
                        readonly SGD: "sgd";
                        readonly HKD: "hkd";
                        readonly KRW: "krw";
                        readonly INR: "inr";
                        readonly VND: "vnd";
                    }>
                ]>;
                amount: z__default.ZodString;
                txId: z__default.ZodString;
                chain: z__default.ZodNativeEnum<{
                    readonly ETHEREUM: "ethereum";
                    readonly POLYGON: "polygon";
                    readonly BSC: "bsc";
                    readonly OPTIMISM: "optimism";
                    readonly ARBITRUM: "arbitrum";
                    readonly BASE: "base";
                    readonly ZORA: "zora";
                    readonly ARBITRUM_NOVA: "arbitrumnova";
                    readonly ASTAR_ZKEVM: "astar-zkevm";
                    readonly APECHAIN: "apechain";
                    readonly APEX: "apex";
                    readonly BOSS: "boss";
                    readonly LIGHTLINK: "lightlink";
                    readonly SKALE_NEBULA: "skale-nebula";
                    readonly SEI_PACIFIC_1: "sei-pacific-1";
                    readonly CHILIZ: "chiliz";
                    readonly AVALANCHE: "avalanche";
                    readonly XAI: "xai";
                    readonly SHAPE: "shape";
                    readonly RARI: "rari";
                    readonly SCROLL: "scroll";
                    readonly VICTION: "viction";
                    readonly MODE: "mode";
                    readonly SPACE: "space";
                    readonly SONEIUM: "soneium";
                    readonly ARBITRUM_SEPOLIA: "arbitrum-sepolia";
                    readonly AVALANCHE_FUJI: "avalanche-fuji";
                    readonly CURTIS: "curtis";
                    readonly BARRET_TESTNET: "barret-testnet";
                    readonly BASE_GOERLI: "base-goerli";
                    readonly BASE_SEPOLIA: "base-sepolia";
                    readonly BSC_TESTNET: "bsc-testnet";
                    readonly CHILIZ_SPICY_TESTNET: "chiliz-spicy-testnet";
                    readonly ETHEREUM_GOERLI: "ethereum-goerli";
                    readonly ETHEREUM_SEPOLIA: "ethereum-sepolia";
                    readonly HYPERSONIC_TESTNET: "hypersonic-testnet";
                    readonly LIGHTLINK_PEGASUS: "lightlink-pegasus";
                    readonly OPTIMISM_GOERLI: "optimism-goerli";
                    readonly OPTIMISM_SEPOLIA: "optimism-sepolia";
                    readonly POLYGON_AMOY: "polygon-amoy";
                    readonly POLYGON_MUMBAI: "polygon-mumbai";
                    readonly PRIVATE_TESTNET_ETHEREUM: "crossmint-private-testnet-ethereum";
                    readonly PRIVATE_TESTNET_POLYGON: "crossmint-private-testnet-polygon";
                    readonly RARI_TESTNET: "rari-testnet";
                    readonly SCROLL_SEPOLIA: "scroll-sepolia";
                    readonly SEI_ATLANTIC_2_TESTNET: "sei-atlantic-2-testnet";
                    readonly SHAPE_SEPOLIA: "shape-sepolia";
                    readonly SKALE_NEBULA_TESTNET: "skale-nebula-testnet";
                    readonly SONEIUM_MINATO_TESTNET: "soneium-minato-testnet";
                    readonly SPACE_TESTNET: "space-testnet";
                    readonly STORY_TESTNET: "story-testnet";
                    readonly VERIFY_TESTNET: "verify-testnet";
                    readonly VICTION_TESTNET: "viction-testnet";
                    readonly XAI_SEPOLIA_TESTNET: "xai-sepolia-testnet";
                    readonly ZKATANA: "zkatana";
                    readonly ZKYOTO: "zkyoto";
                    readonly ZORA_GOERLI: "zora-goerli";
                    readonly ZORA_SEPOLIA: "zora-sepolia";
                    readonly MODE_SEPOLIA: "mode-sepolia";
                    readonly SOLANA: "solana";
                    readonly SUI: "sui";
                    readonly APTOS: "aptos";
                }>;
            }, "strip", z__default.ZodTypeAny, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
                txId: string;
                chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
            }, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
                txId: string;
                chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
            }>,
            z__default.ZodObject<{
                amount: z__default.ZodString;
                currency: z__default.ZodUnion<[
                    z__default.ZodNativeEnum<{
                        readonly ETH: "eth";
                        readonly SOL: "sol";
                        readonly MATIC: "matic";
                        readonly USDC: "usdc";
                        readonly USDXM: "usdxm";
                        readonly DEGEN: "degen";
                        readonly BRETT: "brett";
                        readonly TOSHI: "toshi";
                        readonly BONK: "bonk";
                        readonly WIF: "wif";
                        readonly MOTHER: "mother";
                        readonly EURC: "eurc";
                        readonly SUPERVERSE: "superverse";
                    }>,
                    z__default.ZodNativeEnum<{
                        readonly USD: "usd";
                        readonly EUR: "eur";
                        readonly AUD: "aud";
                        readonly GBP: "gbp";
                        readonly JPY: "jpy";
                        readonly SGD: "sgd";
                        readonly HKD: "hkd";
                        readonly KRW: "krw";
                        readonly INR: "inr";
                        readonly VND: "vnd";
                    }>
                ]>;
            }, "strip", z__default.ZodTypeAny, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }, {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            }>
        ]>>;
        receiptEmail: z__default.ZodOptional<z__default.ZodString>;
    }, "strip", z__default.ZodTypeAny, {
        status: "completed" | "awaiting-payment" | "in-progress" | "requires-quote" | "requires-crypto-payer-address" | "requires-email" | "crypto-payer-insufficient-funds";
        method: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "stripe-payment-element";
        currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
        failureReason?: {
            code: string;
            message?: string | undefined;
        } | {
            code: "unknown" | "tx-id-not-found" | "insufficient-funds";
            message?: string | undefined;
        } | undefined;
        preparation?: {
            chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
            payerAddress?: string | undefined;
            serializedTransaction?: string | undefined;
        } | {
            stripePublishableKey: string;
            stripeClientSecret?: string | undefined;
            stripeEphemeralKeySecret?: string | undefined;
            stripeSubscriptionId?: string | undefined;
        } | undefined;
        received?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        refunded?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        receiptEmail?: string | undefined;
    }, {
        status: "completed" | "awaiting-payment" | "in-progress" | "requires-quote" | "requires-crypto-payer-address" | "requires-email" | "crypto-payer-insufficient-funds";
        method: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "stripe-payment-element";
        currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
        failureReason?: {
            code: string;
            message?: string | undefined;
        } | {
            code: "unknown" | "tx-id-not-found" | "insufficient-funds";
            message?: string | undefined;
        } | undefined;
        preparation?: {
            chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
            payerAddress?: string | undefined;
            serializedTransaction?: string | undefined;
        } | {
            stripePublishableKey: string;
            stripeClientSecret?: string | undefined;
            stripeEphemeralKeySecret?: string | undefined;
            stripeSubscriptionId?: string | undefined;
        } | undefined;
        received?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        refunded?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        receiptEmail?: string | undefined;
    }>;
}, "strip", z__default.ZodTypeAny, {
    quote: {
        status: "valid" | "expired" | "requires-recipient" | "requires-physical-address" | "all-line-items-unavailable";
        quotedAt?: string | undefined;
        expiresAt?: string | undefined;
        totalPrice?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | undefined;
    };
    payment: {
        status: "completed" | "awaiting-payment" | "in-progress" | "requires-quote" | "requires-crypto-payer-address" | "requires-email" | "crypto-payer-insufficient-funds";
        method: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "stripe-payment-element";
        currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
        failureReason?: {
            code: string;
            message?: string | undefined;
        } | {
            code: "unknown" | "tx-id-not-found" | "insufficient-funds";
            message?: string | undefined;
        } | undefined;
        preparation?: {
            chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
            payerAddress?: string | undefined;
            serializedTransaction?: string | undefined;
        } | {
            stripePublishableKey: string;
            stripeClientSecret?: string | undefined;
            stripeEphemeralKeySecret?: string | undefined;
            stripeSubscriptionId?: string | undefined;
        } | undefined;
        received?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        refunded?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        receiptEmail?: string | undefined;
    };
    orderId: string;
    phase: "completed" | "quote" | "delivery" | "payment";
    locale: "en-US" | "es-ES" | "fr-FR" | "it-IT" | "ko-KR" | "pt-PT" | "ja-JP" | "zh-CN" | "zh-TW" | "de-DE" | "ru-RU" | "tr-TR" | "uk-UA" | "th-TH" | "vi-VN" | "Klingon";
    lineItems: {
        chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        quantity: number;
        metadata: {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        };
        quote: {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        };
        delivery: {
            status: "completed";
            txId: string;
            tokens: ({
                locator: string;
                contractAddress: string;
                tokenId: string;
            } | {
                locator: string;
                mintHash: string;
            })[];
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        } | {
            status: "awaiting-payment" | "in-progress" | "failed";
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        };
        slippageBps?: number | undefined;
        callData?: Record<string, any> | undefined;
    }[];
}, {
    quote: {
        status: "valid" | "expired" | "requires-recipient" | "requires-physical-address" | "all-line-items-unavailable";
        quotedAt?: string | undefined;
        expiresAt?: string | undefined;
        totalPrice?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | undefined;
    };
    payment: {
        status: "completed" | "awaiting-payment" | "in-progress" | "requires-quote" | "requires-crypto-payer-address" | "requires-email" | "crypto-payer-insufficient-funds";
        method: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "stripe-payment-element";
        currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
        failureReason?: {
            code: string;
            message?: string | undefined;
        } | {
            code: "unknown" | "tx-id-not-found" | "insufficient-funds";
            message?: string | undefined;
        } | undefined;
        preparation?: {
            chain?: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos" | undefined;
            payerAddress?: string | undefined;
            serializedTransaction?: string | undefined;
        } | {
            stripePublishableKey: string;
            stripeClientSecret?: string | undefined;
            stripeEphemeralKeySecret?: string | undefined;
            stripeSubscriptionId?: string | undefined;
        } | undefined;
        received?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        refunded?: {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
        } | {
            currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
            amount: string;
            txId: string;
            chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        } | undefined;
        receiptEmail?: string | undefined;
    };
    orderId: string;
    phase: "completed" | "quote" | "delivery" | "payment";
    locale: "en-US" | "es-ES" | "fr-FR" | "it-IT" | "ko-KR" | "pt-PT" | "ja-JP" | "zh-CN" | "zh-TW" | "de-DE" | "ru-RU" | "tr-TR" | "uk-UA" | "th-TH" | "vi-VN" | "Klingon";
    lineItems: {
        chain: "ethereum" | "polygon" | "bsc" | "optimism" | "arbitrum" | "base" | "zora" | "arbitrumnova" | "astar-zkevm" | "apechain" | "apex" | "boss" | "lightlink" | "skale-nebula" | "sei-pacific-1" | "chiliz" | "avalanche" | "xai" | "shape" | "rari" | "scroll" | "viction" | "mode" | "space" | "soneium" | "arbitrum-sepolia" | "avalanche-fuji" | "curtis" | "barret-testnet" | "base-goerli" | "base-sepolia" | "bsc-testnet" | "chiliz-spicy-testnet" | "ethereum-goerli" | "ethereum-sepolia" | "hypersonic-testnet" | "lightlink-pegasus" | "optimism-goerli" | "optimism-sepolia" | "polygon-amoy" | "polygon-mumbai" | "crossmint-private-testnet-ethereum" | "crossmint-private-testnet-polygon" | "rari-testnet" | "scroll-sepolia" | "sei-atlantic-2-testnet" | "shape-sepolia" | "skale-nebula-testnet" | "soneium-minato-testnet" | "space-testnet" | "story-testnet" | "verify-testnet" | "viction-testnet" | "xai-sepolia-testnet" | "zkatana" | "zkyoto" | "zora-goerli" | "zora-sepolia" | "mode-sepolia" | "solana" | "sui" | "aptos";
        quantity: number;
        metadata: {
            description: string;
            name: string;
            imageUrl: string;
            collection?: {
                name?: string | undefined;
                description?: string | undefined;
                imageUrl?: string | undefined;
            } | undefined;
        };
        quote: {
            status: "valid" | "item-unavailable" | "expired" | "requires-recipient";
            unavailabilityReason?: {
                code: "to" | "do";
                message: string;
            } | undefined;
            charges?: {
                unit: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                };
                gas?: {
                    currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                    amount: string;
                } | undefined;
            } | undefined;
            totalPrice?: {
                currency: "eth" | "matic" | "usdc" | "usdxm" | "degen" | "brett" | "toshi" | "eurc" | "superverse" | "sol" | "bonk" | "wif" | "mother" | "usd" | "eur" | "aud" | "gbp" | "jpy" | "sgd" | "hkd" | "krw" | "inr" | "vnd";
                amount: string;
            } | undefined;
        };
        delivery: {
            status: "completed";
            txId: string;
            tokens: ({
                locator: string;
                contractAddress: string;
                tokenId: string;
            } | {
                locator: string;
                mintHash: string;
            })[];
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        } | {
            status: "awaiting-payment" | "in-progress" | "failed";
            recipient?: {
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | {
                email: string;
                walletAddress: string;
                locator: string;
                physicalAddress?: {
                    name: string;
                    line1: string;
                    city: string;
                    postalCode: string;
                    country: string;
                    line2?: string | undefined;
                    state?: string | undefined;
                } | undefined;
            } | undefined;
        };
        slippageBps?: number | undefined;
        callData?: Record<string, any> | undefined;
    }[];
}>;
type Order = z__default.infer<typeof orderSchema>;

export { type Order, orderSchema };
