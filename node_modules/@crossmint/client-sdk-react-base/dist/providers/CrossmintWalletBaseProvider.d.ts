import * as react_jsx_runtime from 'react/jsx-runtime';
import * as react from 'react';
import { ReactNode } from 'react';
import { Wallet, Chain, WalletArgsFor, EmailSignerConfig, PhoneSignerConfig } from '@crossmint/wallets-sdk';
import { HandshakeParent } from '@crossmint/client-sdk-window';
import { signerOutboundEvents, signerInboundEvents } from '@crossmint/client-signers';
import { CreateOnLogin } from '../types/wallet.js';
import '@crossmint/common-sdk-base';

type CrossmintWalletBaseContext = {
    wallet: Wallet<Chain> | undefined;
    status: "not-loaded" | "in-progress" | "loaded" | "error";
    getOrCreateWallet: <C extends Chain>(props: WalletArgsFor<C>) => Promise<Wallet<Chain> | undefined>;
    onAuthRequired?: EmailSignerConfig["onAuthRequired"] | PhoneSignerConfig["onAuthRequired"];
    clientTEEConnection?: () => HandshakeParent<typeof signerOutboundEvents, typeof signerInboundEvents>;
};
declare const CrossmintWalletBaseContext: react.Context<CrossmintWalletBaseContext>;
interface CrossmintWalletBaseProviderProps {
    children: ReactNode;
    createOnLogin?: CreateOnLogin;
    callbacks?: {
        onWalletCreationStart?: () => Promise<void>;
        onTransactionStart?: () => Promise<void>;
    };
    onAuthRequired?: EmailSignerConfig["onAuthRequired"] | PhoneSignerConfig["onAuthRequired"];
    clientTEEConnection?: () => HandshakeParent<typeof signerOutboundEvents, typeof signerInboundEvents>;
}
declare function CrossmintWalletBaseProvider({ children, createOnLogin, callbacks, onAuthRequired, clientTEEConnection, }: CrossmintWalletBaseProviderProps): react_jsx_runtime.JSX.Element;

export { CrossmintWalletBaseContext, CrossmintWalletBaseProvider, type CrossmintWalletBaseProviderProps };
