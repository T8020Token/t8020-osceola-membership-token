"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkCMZWGDUFcjs = require('./chunk-CMZWGDUF.cjs');var _chunkOG5ZZ7ACcjs = require('./chunk-OG5ZZ7AC.cjs');var _chunkNIHEG35Icjs = require('./chunk-NIHEG35I.cjs');var _zod = require('zod');var k=class p extends _chunkCMZWGDUFcjs.a{constructor(n,e){let h=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},e==null?void 0:e.incomingEvents),s.fromParent),E=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},e==null?void 0:e.outgoingEvents),s.fromChild);super(n,h,E);this.isConnected=!1;this.handshakeOptions=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},d),e==null?void 0:e.handshakeOptions)}handshakeWithParent(){return _chunkNIHEG35Icjs.e.call(void 0, this,null,function*(){if(console.log("[HandshakeChild] handshakeWithParent() called"),this.isConnected){console.log("[HandshakeChild] Already connected to parent, skipping handshake");return}console.log("[HandshakeChild] Waiting for handshake request from parent");let{requestVerificationId:n}=yield this._onAction({event:"handshakeRequest",callback:e=>(console.log("[HandshakeChild] Received handshake request, processing data:",e),e),responseEvent:"handshakeResponse",options:{timeoutMs:this.handshakeOptions.timeoutMs}});console.log("[HandshakeChild] Waiting for handshake complete from parent"),yield this._onAction({event:"handshakeComplete",options:{timeoutMs:this.handshakeOptions.timeoutMs,condition:e=>e.requestVerificationId===n}}),this.isConnected=!0,console.log("[HandshakeChild] Handshake completed successfully, connection established")})}_onAction(n){return _chunkNIHEG35Icjs.e.call(void 0, this,null,function*(){return console.log(`[HandshakeChild] _onAction() called - Event: ${String(n.event)}`),yield _chunkNIHEG35Icjs.d.call(void 0, p.prototype,this,"onAction").call(this,_chunkNIHEG35Icjs.b.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},n),{options:n.options}))})}};var d={timeoutMs:1e4,intervalMs:100},s= exports.c ={fromChild:{handshakeResponse:_zod.z.object({requestVerificationId:_zod.z.string()})},fromParent:{handshakeRequest:_zod.z.object({requestVerificationId:_zod.z.string()}),handshakeComplete:_zod.z.object({requestVerificationId:_zod.z.string()})}};var l=class extends _chunkCMZWGDUFcjs.a{constructor(n,e){let h=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},e==null?void 0:e.incomingEvents),s.fromChild),E=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},e==null?void 0:e.outgoingEvents),s.fromParent);super(n,h,E);this.isConnected=!1;this.handshakeOptions=_chunkNIHEG35Icjs.a.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},d),e==null?void 0:e.handshakeOptions)}handshakeWithChild(){return _chunkNIHEG35Icjs.e.call(void 0, this,null,function*(){if(console.log("[HandshakeParent] handshakeWithChild() called"),this.isConnected){console.log("[HandshakeParent] Already connected to child, skipping handshake");return}let n=_chunkOG5ZZ7ACcjs.a.call(void 0, );console.log("[HandshakeParent] Starting handshake with child using timeout:",this.handshakeOptions.timeoutMs,"ms"),console.log("[HandshakeParent] Sending handshake request to child"),yield this._sendAction({event:"handshakeRequest",data:{requestVerificationId:n},responseEvent:"handshakeResponse",options:{timeoutMs:this.handshakeOptions.timeoutMs,intervalMs:this.handshakeOptions.intervalMs,condition:e=>e.requestVerificationId===n}}),console.log("[HandshakeParent] Received valid handshake response, sending handshake complete"),this._send("handshakeComplete",{requestVerificationId:n}),this.isConnected=!0,console.log("[HandshakeParent] Handshake completed successfully, connection established")})}_send(n,e){return console.log("[HandshakeParent] _send() - Data:",e),super.send(n,e)}_sendAction(n){return console.log(`[HandshakeParent] _sendAction() called - Event: ${String(n.event)}, ResponseEvent: ${String(n.responseEvent)}`),super.sendAction(_chunkNIHEG35Icjs.b.call(void 0, _chunkNIHEG35Icjs.a.call(void 0, {},n),{options:n.options}))}};exports.a = l; exports.b = d; exports.c = s; exports.d = k;
