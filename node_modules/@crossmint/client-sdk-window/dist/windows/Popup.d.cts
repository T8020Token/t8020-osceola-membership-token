import { E as EventMap } from '../EventEmitter-BSJu8y8c.cjs';
import { HandshakeParent, EventEmitterWithHandshakeOptions } from '../handshake/index.cjs';
import 'zod';

interface PopupWindowOptions {
    width: number;
    height: number;
    crossOrigin?: boolean;
    awaitToLoad?: boolean;
}
declare class PopupWindow<IncomingEvents extends EventMap, OutgoingEvents extends EventMap> extends HandshakeParent<IncomingEvents, OutgoingEvents> {
    window: Window;
    private constructor();
    static init<IncomingEvents extends EventMap, OutgoingEvents extends EventMap>(url: string, options: PopupWindowOptions & EventEmitterWithHandshakeOptions<IncomingEvents, OutgoingEvents>): Promise<PopupWindow<IncomingEvents, OutgoingEvents>>;
    static initSync<IncomingEvents extends EventMap, OutgoingEvents extends EventMap>(url: string, options: PopupWindowOptions & EventEmitterWithHandshakeOptions<IncomingEvents, OutgoingEvents>): PopupWindow<IncomingEvents, OutgoingEvents>;
}

export { PopupWindow, type PopupWindowOptions };
