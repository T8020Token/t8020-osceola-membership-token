import { E as EventMap } from '../EventEmitter-BSJu8y8c.cjs';
import { HandshakeParent, EventEmitterWithHandshakeOptions } from '../handshake/index.cjs';
import 'zod';

interface NewTabWindowOptions {
    awaitToLoad?: boolean;
}
declare class NewTabWindow<IncomingEvents extends EventMap, OutgoingEvents extends EventMap> extends HandshakeParent<IncomingEvents, OutgoingEvents> {
    window: Window;
    private constructor();
    static init<IncomingEvents extends EventMap, OutgoingEvents extends EventMap>(url: string, options: NewTabWindowOptions & EventEmitterWithHandshakeOptions<IncomingEvents, OutgoingEvents>): Promise<NewTabWindow<IncomingEvents, OutgoingEvents>>;
    static initSync<IncomingEvents extends EventMap, OutgoingEvents extends EventMap>(url: string, options: EventEmitterWithHandshakeOptions<IncomingEvents, OutgoingEvents>): NewTabWindow<IncomingEvents, OutgoingEvents>;
}

export { NewTabWindow, type NewTabWindowOptions };
