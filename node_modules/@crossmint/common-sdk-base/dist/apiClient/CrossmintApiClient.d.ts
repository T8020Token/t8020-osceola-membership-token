import { ApiClient } from './ApiClient.js';
import { APIKeyEnvironmentPrefix } from '../apiKey/types.js';
import { ValidateApiKeySuccessResult } from '../apiKey/validateAPIKey.js';
import { ValidateAPIKeyPrefixExpectations } from '../apiKey/validateAPIKeyPrefix.js';
import { Crossmint } from '../types/Crossmint.js';
import '../types/signers.js';
import '@solana/web3.js';
import 'viem';

type CrossmintApiClientInternalConfig = {
    sdkMetadata: {
        name: string;
        version: string;
    };
    apiKeyExpectations?: ValidateAPIKeyPrefixExpectations;
};
declare class CrossmintApiClient extends ApiClient {
    crossmint: Crossmint;
    protected parsedAPIKey: ValidateApiKeySuccessResult;
    protected internalConfig: CrossmintApiClientInternalConfig;
    constructor(crossmint: Crossmint, { internalConfig, }: {
        internalConfig: CrossmintApiClientInternalConfig;
    });
    get baseUrl(): string;
    get commonHeaders(): {
        Authorization?: string | undefined;
        "x-extension-id"?: string | undefined;
        "x-app-identifier"?: string | undefined;
        "x-client-name": string;
        "x-client-version": string;
        "x-api-key": string;
    };
    get environment(): APIKeyEnvironmentPrefix;
    private get resolvedJwt();
}

export { CrossmintApiClient, type CrossmintApiClientInternalConfig };
