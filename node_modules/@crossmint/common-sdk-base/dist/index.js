import{a as I,b as J,c as K,d as L,e as M,f as N,g as O,h as P,i as Q,j as $}from"./chunk-TUI77YWR.js";import"./chunk-4WJADBKW.js";import"./chunk-TT3AQCPW.js";import{a as Z,b as _}from"./chunk-DCCF6XMI.js";import{a as X,b as Y}from"./chunk-EYF23X4P.js";import{a as R,b as S}from"./chunk-OLG5K5O2.js";import{a as T,b as U,c as V,d as W}from"./chunk-YLY3RFK5.js";import{a as G,b as H}from"./chunk-T7234VBK.js";import{a as A,b as B,c as C,d as D,e as E,f as F}from"./chunk-56QQI5DD.js";import{a as aa}from"./chunk-UDWSDGKT.js";import"./chunk-X5HIPEMX.js";import"./chunk-WFC2BIV5.js";import"./chunk-YQYXZHVU.js";import"./chunk-H2R3SXNU.js";import"./chunk-OSYXFX4W.js";import{a as z}from"./chunk-UX5HW67O.js";import{a as r}from"./chunk-INSWJJ6L.js";import"./chunk-NX3TZL62.js";import{a as s,b as t,c as u,d as v,e as w,f as x,g as y}from"./chunk-6WDXURUQ.js";import"./chunk-Q7ABYTYX.js";import"./chunk-6ECBBENI.js";import{a as q}from"./chunk-C4ZTNVCV.js";import{a}from"./chunk-3HVWJ3ZF.js";import"./chunk-T3SBXHAL.js";import{a as m,b as n,c as o,d as p}from"./chunk-JVMPPRNZ.js";import{a as b}from"./chunk-LTUL7WZA.js";import{a as h}from"./chunk-WBULM2SU.js";import{a as l}from"./chunk-U4QEE6R5.js";import{a as c,b as d,c as e,d as f,e as g}from"./chunk-4RWQEYZX.js";import{a as i,b as j,c as k}from"./chunk-XAJGDBTH.js";import"./chunk-22GIA4MK.js";export{j as APIKeyEnvironmentPrefix,k as APIKeyUsageOrigin,i as APIKeyUsageOriginPrefix,a as ApiClient,J as BLOCKCHAINS,N as BLOCKCHAINS_INCLUDING_TESTNETS,H as BLOCKCHAIN_BASE_LAYERS,L as BLOCKCHAIN_TESTNETS,X as BLOCKCHAIN_TO_CHAIN_ID,R as BLOCKCHAIN_TO_COPY_NAME,I as Blockchain,G as BlockchainBaseLayer,M as BlockchainIncludingTestnet,K as BlockchainTestnet,Z as CHAIN_ID_TO_BLOCKCHAIN,d as CROSSMINT_API_KEY_SIGNER_PUBLICKEY_PROD,c as CROSSMINT_API_KEY_SIGNER_PUBLICKEY_STAGING,e as CROSSMINT_DEV_URL,g as CROSSMINT_PROD_URL,f as CROSSMINT_STG_URL,q as CrossmintApiClient,y as CrossmintErrors,aa as CrossmintSDKError,A as EVMBlockchain,E as EVMBlockchainIncludingTestnet,C as EVMBlockchainTestnet,F as EVM_BLOCKCHAINS_INCLUDING_TESTNETS,D as EVM_BLOCKCHAIN_TESTNETS,B as EVM_CHAINS,u as LimitErrors,O as PayerSupportedBlockchains,s as PaymentErrors,v as ProjectErrors,w as SmartWalletErrorCode,t as ValidationErrors,x as WalletErrorCode,Y as blockchainToChainId,S as blockchainToDisplayName,_ as chainIdToBlockchain,r as createCrossmint,b as environmentToCrossmintBaseURL,h as environmentToExpectedPublicKey,o as getEnvironmentForKey,P as isBlockchain,Q as isBlockchainIncludingTestnets,$ as isEVMBlockchain,W as isValidAddress,T as isValidEvmAddress,U as isValidSolanaAddress,V as isValidStellarAddress,z as objectValues,l as usageOriginToPrefix,p as validateAPIKey,n as validateAPIKeyPrefix,m as validateApiKeyAndGetCrossmintBaseUrl};
